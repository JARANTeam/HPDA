//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.CompactFramework.Design.Data 2.0.50727.5485 版自动生成。
// 
namespace HPDA {
    using System;
    using System.Data;
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProDataSet")]
    public partial class ProDataSet : global::System.Data.DataSet {
        
        private ProDeliveryDataTable tableProDelivery;
        
        private ProDeliveryDetailDataTable tableProDeliveryDetail;
        
        private ProStoreDetailDataTable tableProStoreDetail;
        
        private StockDetailDataTable tableStockDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProDeliveryDataTable ProDelivery {
            get {
                return this.tableProDelivery;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProDeliveryDetailDataTable ProDeliveryDetail {
            get {
                return this.tableProDeliveryDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProStoreDetailDataTable ProStoreDetail {
            get {
                return this.tableProStoreDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockDetailDataTable StockDetail {
            get {
                return this.tableStockDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ProDataSet cln = ((ProDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProDelivery"] != null)) {
                    base.Tables.Add(new ProDeliveryDataTable(ds.Tables["ProDelivery"]));
                }
                if ((ds.Tables["ProDeliveryDetail"] != null)) {
                    base.Tables.Add(new ProDeliveryDetailDataTable(ds.Tables["ProDeliveryDetail"]));
                }
                if ((ds.Tables["ProStoreDetail"] != null)) {
                    base.Tables.Add(new ProStoreDetailDataTable(ds.Tables["ProStoreDetail"]));
                }
                if ((ds.Tables["StockDetail"] != null)) {
                    base.Tables.Add(new StockDetailDataTable(ds.Tables["StockDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableProDelivery = ((ProDeliveryDataTable)(base.Tables["ProDelivery"]));
            if ((initTable == true)) {
                if ((this.tableProDelivery != null)) {
                    this.tableProDelivery.InitVars();
                }
            }
            this.tableProDeliveryDetail = ((ProDeliveryDetailDataTable)(base.Tables["ProDeliveryDetail"]));
            if ((initTable == true)) {
                if ((this.tableProDeliveryDetail != null)) {
                    this.tableProDeliveryDetail.InitVars();
                }
            }
            this.tableProStoreDetail = ((ProStoreDetailDataTable)(base.Tables["ProStoreDetail"]));
            if ((initTable == true)) {
                if ((this.tableProStoreDetail != null)) {
                    this.tableProStoreDetail.InitVars();
                }
            }
            this.tableStockDetail = ((StockDetailDataTable)(base.Tables["StockDetail"]));
            if ((initTable == true)) {
                if ((this.tableStockDetail != null)) {
                    this.tableStockDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ProDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ProDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProDelivery = new ProDeliveryDataTable();
            base.Tables.Add(this.tableProDelivery);
            this.tableProDeliveryDetail = new ProDeliveryDetailDataTable();
            base.Tables.Add(this.tableProDeliveryDetail);
            this.tableProStoreDetail = new ProStoreDetailDataTable();
            base.Tables.Add(this.tableProStoreDetail);
            this.tableStockDetail = new StockDetailDataTable();
            base.Tables.Add(this.tableStockDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProDelivery() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProDeliveryDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProStoreDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProDataSet ds = new ProDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ProDeliveryRowChangeEventHandler(object sender, ProDeliveryRowChangeEvent e);
        
        public delegate void ProDeliveryDetailRowChangeEventHandler(object sender, ProDeliveryDetailRowChangeEvent e);
        
        public delegate void ProStoreDetailRowChangeEventHandler(object sender, ProStoreDetailRowChangeEvent e);
        
        public delegate void StockDetailRowChangeEventHandler(object sender, StockDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProDeliveryDataTable : global::System.Data.TypedTableBase<ProDeliveryRow> {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columncCode;
            
            private global::System.Data.DataColumn columncCusCode;
            
            private global::System.Data.DataColumn columncCusName;
            
            private global::System.Data.DataColumn columncMaker;
            
            private global::System.Data.DataColumn columndMaketime;
            
            private global::System.Data.DataColumn columncDepCode;
            
            private global::System.Data.DataColumn columncDepName;
            
            private global::System.Data.DataColumn columncMemo;
            
            private global::System.Data.DataColumn columncVerifyState;
            
            private global::System.Data.DataColumn columncHandler;
            
            private global::System.Data.DataColumn columndVeriDate;
            
            private global::System.Data.DataColumn columnAutoID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDataTable() {
                this.TableName = "ProDelivery";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProDeliveryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCodeColumn {
                get {
                    return this.columncCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCusCodeColumn {
                get {
                    return this.columncCusCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCusNameColumn {
                get {
                    return this.columncCusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cMakerColumn {
                get {
                    return this.columncMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dMaketimeColumn {
                get {
                    return this.columndMaketime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cDepCodeColumn {
                get {
                    return this.columncDepCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cDepNameColumn {
                get {
                    return this.columncDepName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cMemoColumn {
                get {
                    return this.columncMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cVerifyStateColumn {
                get {
                    return this.columncVerifyState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cHandlerColumn {
                get {
                    return this.columncHandler;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dVeriDateColumn {
                get {
                    return this.columndVeriDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryRow this[int index] {
                get {
                    return ((ProDeliveryRow)(this.Rows[index]));
                }
            }
            
            public event ProDeliveryRowChangeEventHandler ProDeliveryRowChanging;
            
            public event ProDeliveryRowChangeEventHandler ProDeliveryRowChanged;
            
            public event ProDeliveryRowChangeEventHandler ProDeliveryRowDeleting;
            
            public event ProDeliveryRowChangeEventHandler ProDeliveryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProDeliveryRow(ProDeliveryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryRow AddProDeliveryRow(string cCode, string cCusCode, string cCusName, string cMaker, string dMaketime, string cDepCode, string cDepName, string cMemo, string cVerifyState, string cHandler, string dVeriDate, string AutoID) {
                ProDeliveryRow rowProDeliveryRow = ((ProDeliveryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cCode,
                        cCusCode,
                        cCusName,
                        cMaker,
                        dMaketime,
                        cDepCode,
                        cDepName,
                        cMemo,
                        cVerifyState,
                        cHandler,
                        dVeriDate,
                        AutoID};
                rowProDeliveryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProDeliveryRow);
                return rowProDeliveryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProDeliveryDataTable cln = ((ProDeliveryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProDeliveryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columncCode = base.Columns["cCode"];
                this.columncCusCode = base.Columns["cCusCode"];
                this.columncCusName = base.Columns["cCusName"];
                this.columncMaker = base.Columns["cMaker"];
                this.columndMaketime = base.Columns["dMaketime"];
                this.columncDepCode = base.Columns["cDepCode"];
                this.columncDepName = base.Columns["cDepName"];
                this.columncMemo = base.Columns["cMemo"];
                this.columncVerifyState = base.Columns["cVerifyState"];
                this.columncHandler = base.Columns["cHandler"];
                this.columndVeriDate = base.Columns["dVeriDate"];
                this.columnAutoID = base.Columns["AutoID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columncCode = new global::System.Data.DataColumn("cCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCode);
                this.columncCusCode = new global::System.Data.DataColumn("cCusCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCusCode);
                this.columncCusName = new global::System.Data.DataColumn("cCusName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCusName);
                this.columncMaker = new global::System.Data.DataColumn("cMaker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncMaker);
                this.columndMaketime = new global::System.Data.DataColumn("dMaketime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndMaketime);
                this.columncDepCode = new global::System.Data.DataColumn("cDepCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncDepCode);
                this.columncDepName = new global::System.Data.DataColumn("cDepName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncDepName);
                this.columncMemo = new global::System.Data.DataColumn("cMemo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncMemo);
                this.columncVerifyState = new global::System.Data.DataColumn("cVerifyState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncVerifyState);
                this.columncHandler = new global::System.Data.DataColumn("cHandler", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncHandler);
                this.columndVeriDate = new global::System.Data.DataColumn("dVeriDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndVeriDate);
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnRowNo.AutoIncrement = true;
                this.columnRowNo.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryRow NewProDeliveryRow() {
                return ((ProDeliveryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProDeliveryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProDeliveryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProDeliveryRowChanged != null)) {
                    this.ProDeliveryRowChanged(this, new ProDeliveryRowChangeEvent(((ProDeliveryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProDeliveryRowChanging != null)) {
                    this.ProDeliveryRowChanging(this, new ProDeliveryRowChangeEvent(((ProDeliveryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProDeliveryRowDeleted != null)) {
                    this.ProDeliveryRowDeleted(this, new ProDeliveryRowChangeEvent(((ProDeliveryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProDeliveryRowDeleting != null)) {
                    this.ProDeliveryRowDeleting(this, new ProDeliveryRowChangeEvent(((ProDeliveryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProDeliveryRow(ProDeliveryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProDataSet ds = new ProDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProDeliveryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProDeliveryDetailDataTable : global::System.Data.TypedTableBase<ProDeliveryDetailRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncCode;
            
            private global::System.Data.DataColumn columncBarCode;
            
            private global::System.Data.DataColumn columncInvCode;
            
            private global::System.Data.DataColumn columncInvName;
            
            private global::System.Data.DataColumn columniQuantity;
            
            private global::System.Data.DataColumn columncUser;
            
            private global::System.Data.DataColumn columndAddTime;
            
            private global::System.Data.DataColumn columnFSPNumber;
            
            private global::System.Data.DataColumn columncBoxNumber;
            
            private global::System.Data.DataColumn columncLotNo;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnAutoID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailDataTable() {
                this.TableName = "ProDeliveryDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProDeliveryDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cCodeColumn {
                get {
                    return this.columncCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cBarCodeColumn {
                get {
                    return this.columncBarCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cInvCodeColumn {
                get {
                    return this.columncInvCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cInvNameColumn {
                get {
                    return this.columncInvName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iQuantityColumn {
                get {
                    return this.columniQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cUserColumn {
                get {
                    return this.columncUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dAddTimeColumn {
                get {
                    return this.columndAddTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSPNumberColumn {
                get {
                    return this.columnFSPNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cBoxNumberColumn {
                get {
                    return this.columncBoxNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cLotNoColumn {
                get {
                    return this.columncLotNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoIDColumn {
                get {
                    return this.columnAutoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailRow this[int index] {
                get {
                    return ((ProDeliveryDetailRow)(this.Rows[index]));
                }
            }
            
            public event ProDeliveryDetailRowChangeEventHandler ProDeliveryDetailRowChanging;
            
            public event ProDeliveryDetailRowChangeEventHandler ProDeliveryDetailRowChanged;
            
            public event ProDeliveryDetailRowChangeEventHandler ProDeliveryDetailRowDeleting;
            
            public event ProDeliveryDetailRowChangeEventHandler ProDeliveryDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProDeliveryDetailRow(ProDeliveryDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailRow AddProDeliveryDetailRow(string id, string cCode, string cBarCode, string cInvCode, string cInvName, string iQuantity, string cUser, string dAddTime, string FSPNumber, string cBoxNumber, string cLotNo, string AutoID) {
                ProDeliveryDetailRow rowProDeliveryDetailRow = ((ProDeliveryDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        cCode,
                        cBarCode,
                        cInvCode,
                        cInvName,
                        iQuantity,
                        cUser,
                        dAddTime,
                        FSPNumber,
                        cBoxNumber,
                        cLotNo,
                        null,
                        AutoID};
                rowProDeliveryDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProDeliveryDetailRow);
                return rowProDeliveryDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProDeliveryDetailDataTable cln = ((ProDeliveryDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProDeliveryDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncCode = base.Columns["cCode"];
                this.columncBarCode = base.Columns["cBarCode"];
                this.columncInvCode = base.Columns["cInvCode"];
                this.columncInvName = base.Columns["cInvName"];
                this.columniQuantity = base.Columns["iQuantity"];
                this.columncUser = base.Columns["cUser"];
                this.columndAddTime = base.Columns["dAddTime"];
                this.columnFSPNumber = base.Columns["FSPNumber"];
                this.columncBoxNumber = base.Columns["cBoxNumber"];
                this.columncLotNo = base.Columns["cLotNo"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnAutoID = base.Columns["AutoID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncCode = new global::System.Data.DataColumn("cCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncCode);
                this.columncBarCode = new global::System.Data.DataColumn("cBarCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncBarCode);
                this.columncInvCode = new global::System.Data.DataColumn("cInvCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncInvCode);
                this.columncInvName = new global::System.Data.DataColumn("cInvName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncInvName);
                this.columniQuantity = new global::System.Data.DataColumn("iQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniQuantity);
                this.columncUser = new global::System.Data.DataColumn("cUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncUser);
                this.columndAddTime = new global::System.Data.DataColumn("dAddTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndAddTime);
                this.columnFSPNumber = new global::System.Data.DataColumn("FSPNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPNumber);
                this.columncBoxNumber = new global::System.Data.DataColumn("cBoxNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncBoxNumber);
                this.columncLotNo = new global::System.Data.DataColumn("cLotNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncLotNo);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnAutoID = new global::System.Data.DataColumn("AutoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoID);
                this.columnRowNo.AutoIncrement = true;
                this.columnRowNo.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailRow NewProDeliveryDetailRow() {
                return ((ProDeliveryDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProDeliveryDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProDeliveryDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProDeliveryDetailRowChanged != null)) {
                    this.ProDeliveryDetailRowChanged(this, new ProDeliveryDetailRowChangeEvent(((ProDeliveryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProDeliveryDetailRowChanging != null)) {
                    this.ProDeliveryDetailRowChanging(this, new ProDeliveryDetailRowChangeEvent(((ProDeliveryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProDeliveryDetailRowDeleted != null)) {
                    this.ProDeliveryDetailRowDeleted(this, new ProDeliveryDetailRowChangeEvent(((ProDeliveryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProDeliveryDetailRowDeleting != null)) {
                    this.ProDeliveryDetailRowDeleting(this, new ProDeliveryDetailRowChangeEvent(((ProDeliveryDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProDeliveryDetailRow(ProDeliveryDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProDataSet ds = new ProDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProDeliveryDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProStoreDetailDataTable : global::System.Data.TypedTableBase<ProStoreDetailRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncBarCode;
            
            private global::System.Data.DataColumn columncInvCode;
            
            private global::System.Data.DataColumn columncInvName;
            
            private global::System.Data.DataColumn columniQuantity;
            
            private global::System.Data.DataColumn columncUser;
            
            private global::System.Data.DataColumn columnFSPNumber;
            
            private global::System.Data.DataColumn columncLotNo;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnFItemID;
            
            private global::System.Data.DataColumn columndScanTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailDataTable() {
                this.TableName = "ProStoreDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProStoreDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cBarCodeColumn {
                get {
                    return this.columncBarCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cInvCodeColumn {
                get {
                    return this.columncInvCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cInvNameColumn {
                get {
                    return this.columncInvName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iQuantityColumn {
                get {
                    return this.columniQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cUserColumn {
                get {
                    return this.columncUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSPNumberColumn {
                get {
                    return this.columnFSPNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cLotNoColumn {
                get {
                    return this.columncLotNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FItemIDColumn {
                get {
                    return this.columnFItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dScanTimeColumn {
                get {
                    return this.columndScanTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailRow this[int index] {
                get {
                    return ((ProStoreDetailRow)(this.Rows[index]));
                }
            }
            
            public event ProStoreDetailRowChangeEventHandler ProStoreDetailRowChanging;
            
            public event ProStoreDetailRowChangeEventHandler ProStoreDetailRowChanged;
            
            public event ProStoreDetailRowChangeEventHandler ProStoreDetailRowDeleting;
            
            public event ProStoreDetailRowChangeEventHandler ProStoreDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProStoreDetailRow(ProStoreDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailRow AddProStoreDetailRow(string id, string cBarCode, string cInvCode, string cInvName, string iQuantity, string cUser, string FSPNumber, string cLotNo, string FItemID, string dScanTime) {
                ProStoreDetailRow rowProStoreDetailRow = ((ProStoreDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        cBarCode,
                        cInvCode,
                        cInvName,
                        iQuantity,
                        cUser,
                        FSPNumber,
                        cLotNo,
                        null,
                        FItemID,
                        dScanTime};
                rowProStoreDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProStoreDetailRow);
                return rowProStoreDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProStoreDetailDataTable cln = ((ProStoreDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProStoreDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncBarCode = base.Columns["cBarCode"];
                this.columncInvCode = base.Columns["cInvCode"];
                this.columncInvName = base.Columns["cInvName"];
                this.columniQuantity = base.Columns["iQuantity"];
                this.columncUser = base.Columns["cUser"];
                this.columnFSPNumber = base.Columns["FSPNumber"];
                this.columncLotNo = base.Columns["cLotNo"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnFItemID = base.Columns["FItemID"];
                this.columndScanTime = base.Columns["dScanTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncBarCode = new global::System.Data.DataColumn("cBarCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncBarCode);
                this.columncInvCode = new global::System.Data.DataColumn("cInvCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncInvCode);
                this.columncInvName = new global::System.Data.DataColumn("cInvName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncInvName);
                this.columniQuantity = new global::System.Data.DataColumn("iQuantity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniQuantity);
                this.columncUser = new global::System.Data.DataColumn("cUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncUser);
                this.columnFSPNumber = new global::System.Data.DataColumn("FSPNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSPNumber);
                this.columncLotNo = new global::System.Data.DataColumn("cLotNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncLotNo);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnFItemID = new global::System.Data.DataColumn("FItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFItemID);
                this.columndScanTime = new global::System.Data.DataColumn("dScanTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndScanTime);
                this.columnRowNo.AutoIncrement = true;
                this.columnRowNo.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailRow NewProStoreDetailRow() {
                return ((ProStoreDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProStoreDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProStoreDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProStoreDetailRowChanged != null)) {
                    this.ProStoreDetailRowChanged(this, new ProStoreDetailRowChangeEvent(((ProStoreDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProStoreDetailRowChanging != null)) {
                    this.ProStoreDetailRowChanging(this, new ProStoreDetailRowChangeEvent(((ProStoreDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProStoreDetailRowDeleted != null)) {
                    this.ProStoreDetailRowDeleted(this, new ProStoreDetailRowChangeEvent(((ProStoreDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProStoreDetailRowDeleting != null)) {
                    this.ProStoreDetailRowDeleting(this, new ProStoreDetailRowChangeEvent(((ProStoreDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProStoreDetailRow(ProStoreDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProDataSet ds = new ProDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProStoreDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDetailDataTable : global::System.Data.TypedTableBase<StockDetailRow> {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnFBatchNo;
            
            private global::System.Data.DataColumn columnFQty;
            
            private global::System.Data.DataColumn columnFStockName;
            
            private global::System.Data.DataColumn columnFStockPlaceNumber;
            
            private global::System.Data.DataColumn columnFStockPlaceName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailDataTable() {
                this.TableName = "StockDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FBatchNoColumn {
                get {
                    return this.columnFBatchNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQtyColumn {
                get {
                    return this.columnFQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FStockNameColumn {
                get {
                    return this.columnFStockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FStockPlaceNumberColumn {
                get {
                    return this.columnFStockPlaceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FStockPlaceNameColumn {
                get {
                    return this.columnFStockPlaceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailRow this[int index] {
                get {
                    return ((StockDetailRow)(this.Rows[index]));
                }
            }
            
            public event StockDetailRowChangeEventHandler StockDetailRowChanging;
            
            public event StockDetailRowChangeEventHandler StockDetailRowChanged;
            
            public event StockDetailRowChangeEventHandler StockDetailRowDeleting;
            
            public event StockDetailRowChangeEventHandler StockDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockDetailRow(StockDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailRow AddStockDetailRow(string FBatchNo, string FQty, string FStockName, string FStockPlaceNumber, string FStockPlaceName) {
                StockDetailRow rowStockDetailRow = ((StockDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FBatchNo,
                        FQty,
                        FStockName,
                        FStockPlaceNumber,
                        FStockPlaceName};
                rowStockDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockDetailRow);
                return rowStockDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockDetailDataTable cln = ((StockDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnFBatchNo = base.Columns["FBatchNo"];
                this.columnFQty = base.Columns["FQty"];
                this.columnFStockName = base.Columns["FStockName"];
                this.columnFStockPlaceNumber = base.Columns["FStockPlaceNumber"];
                this.columnFStockPlaceName = base.Columns["FStockPlaceName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnFBatchNo = new global::System.Data.DataColumn("FBatchNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFBatchNo);
                this.columnFQty = new global::System.Data.DataColumn("FQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQty);
                this.columnFStockName = new global::System.Data.DataColumn("FStockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFStockName);
                this.columnFStockPlaceNumber = new global::System.Data.DataColumn("FStockPlaceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFStockPlaceNumber);
                this.columnFStockPlaceName = new global::System.Data.DataColumn("FStockPlaceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFStockPlaceName);
                this.columnRowNo.AutoIncrement = true;
                this.columnRowNo.AutoIncrementSeed = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailRow NewStockDetailRow() {
                return ((StockDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockDetailRowChanged != null)) {
                    this.StockDetailRowChanged(this, new StockDetailRowChangeEvent(((StockDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockDetailRowChanging != null)) {
                    this.StockDetailRowChanging(this, new StockDetailRowChangeEvent(((StockDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockDetailRowDeleted != null)) {
                    this.StockDetailRowDeleted(this, new StockDetailRowChangeEvent(((StockDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockDetailRowDeleting != null)) {
                    this.StockDetailRowDeleting(this, new StockDetailRowChangeEvent(((StockDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockDetailRow(StockDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProDataSet ds = new ProDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProDeliveryRow : global::System.Data.DataRow {
            
            private ProDeliveryDataTable tableProDelivery;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProDeliveryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProDelivery = ((ProDeliveryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableProDelivery.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“RowNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCode {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCusCode {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cCusCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cCusCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cCusCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCusName {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cCusNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cCusName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cCusNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cMaker {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cMakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cMaker”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cMakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dMaketime {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.dMaketimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“dMaketime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.dMaketimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cDepCode {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cDepCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cDepCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cDepCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cDepName {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cDepNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cDepName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cDepNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cMemo {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cMemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cMemo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cMemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cVerifyState {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cVerifyStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cVerifyState”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cVerifyStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cHandler {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.cHandlerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“cHandler”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.cHandlerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dVeriDate {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.dVeriDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“dVeriDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.dVeriDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AutoID {
                get {
                    try {
                        return ((string)(this[this.tableProDelivery.AutoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDelivery”中列“AutoID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDelivery.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableProDelivery.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableProDelivery.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCodeNull() {
                return this.IsNull(this.tableProDelivery.cCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCodeNull() {
                this[this.tableProDelivery.cCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCusCodeNull() {
                return this.IsNull(this.tableProDelivery.cCusCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCusCodeNull() {
                this[this.tableProDelivery.cCusCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCusNameNull() {
                return this.IsNull(this.tableProDelivery.cCusNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCusNameNull() {
                this[this.tableProDelivery.cCusNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscMakerNull() {
                return this.IsNull(this.tableProDelivery.cMakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcMakerNull() {
                this[this.tableProDelivery.cMakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdMaketimeNull() {
                return this.IsNull(this.tableProDelivery.dMaketimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdMaketimeNull() {
                this[this.tableProDelivery.dMaketimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscDepCodeNull() {
                return this.IsNull(this.tableProDelivery.cDepCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcDepCodeNull() {
                this[this.tableProDelivery.cDepCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscDepNameNull() {
                return this.IsNull(this.tableProDelivery.cDepNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcDepNameNull() {
                this[this.tableProDelivery.cDepNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscMemoNull() {
                return this.IsNull(this.tableProDelivery.cMemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcMemoNull() {
                this[this.tableProDelivery.cMemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscVerifyStateNull() {
                return this.IsNull(this.tableProDelivery.cVerifyStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcVerifyStateNull() {
                this[this.tableProDelivery.cVerifyStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscHandlerNull() {
                return this.IsNull(this.tableProDelivery.cHandlerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcHandlerNull() {
                this[this.tableProDelivery.cHandlerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdVeriDateNull() {
                return this.IsNull(this.tableProDelivery.dVeriDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdVeriDateNull() {
                this[this.tableProDelivery.dVeriDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoIDNull() {
                return this.IsNull(this.tableProDelivery.AutoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoIDNull() {
                this[this.tableProDelivery.AutoIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProDeliveryDetailRow : global::System.Data.DataRow {
            
            private ProDeliveryDetailDataTable tableProDeliveryDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProDeliveryDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProDeliveryDetail = ((ProDeliveryDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“id”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cCode {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cBarCode {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cBarCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cBarCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cBarCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cInvCode {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cInvCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cInvCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cInvCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cInvName {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cInvNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cInvName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cInvNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.iQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“iQuantity”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.iQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cUser {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dAddTime {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.dAddTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“dAddTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.dAddTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSPNumber {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.FSPNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“FSPNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.FSPNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cBoxNumber {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cBoxNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cBoxNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cBoxNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cLotNo {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.cLotNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“cLotNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.cLotNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableProDeliveryDetail.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“RowNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AutoID {
                get {
                    try {
                        return ((string)(this[this.tableProDeliveryDetail.AutoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProDeliveryDetail”中列“AutoID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProDeliveryDetail.AutoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableProDeliveryDetail.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableProDeliveryDetail.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscCodeNull() {
                return this.IsNull(this.tableProDeliveryDetail.cCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcCodeNull() {
                this[this.tableProDeliveryDetail.cCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscBarCodeNull() {
                return this.IsNull(this.tableProDeliveryDetail.cBarCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcBarCodeNull() {
                this[this.tableProDeliveryDetail.cBarCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscInvCodeNull() {
                return this.IsNull(this.tableProDeliveryDetail.cInvCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcInvCodeNull() {
                this[this.tableProDeliveryDetail.cInvCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscInvNameNull() {
                return this.IsNull(this.tableProDeliveryDetail.cInvNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcInvNameNull() {
                this[this.tableProDeliveryDetail.cInvNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiQuantityNull() {
                return this.IsNull(this.tableProDeliveryDetail.iQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiQuantityNull() {
                this[this.tableProDeliveryDetail.iQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscUserNull() {
                return this.IsNull(this.tableProDeliveryDetail.cUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcUserNull() {
                this[this.tableProDeliveryDetail.cUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdAddTimeNull() {
                return this.IsNull(this.tableProDeliveryDetail.dAddTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdAddTimeNull() {
                this[this.tableProDeliveryDetail.dAddTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSPNumberNull() {
                return this.IsNull(this.tableProDeliveryDetail.FSPNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSPNumberNull() {
                this[this.tableProDeliveryDetail.FSPNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscBoxNumberNull() {
                return this.IsNull(this.tableProDeliveryDetail.cBoxNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcBoxNumberNull() {
                this[this.tableProDeliveryDetail.cBoxNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscLotNoNull() {
                return this.IsNull(this.tableProDeliveryDetail.cLotNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcLotNoNull() {
                this[this.tableProDeliveryDetail.cLotNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableProDeliveryDetail.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableProDeliveryDetail.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoIDNull() {
                return this.IsNull(this.tableProDeliveryDetail.AutoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoIDNull() {
                this[this.tableProDeliveryDetail.AutoIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProStoreDetailRow : global::System.Data.DataRow {
            
            private ProStoreDetailDataTable tableProStoreDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProStoreDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProStoreDetail = ((ProStoreDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“id”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cBarCode {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.cBarCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“cBarCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.cBarCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cInvCode {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.cInvCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“cInvCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.cInvCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cInvName {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.cInvNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“cInvName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.cInvNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iQuantity {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.iQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“iQuantity”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.iQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cUser {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.cUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“cUser”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.cUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FSPNumber {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.FSPNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“FSPNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.FSPNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cLotNo {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.cLotNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“cLotNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.cLotNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableProStoreDetail.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“RowNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FItemID {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.FItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“FItemID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.FItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dScanTime {
                get {
                    try {
                        return ((string)(this[this.tableProStoreDetail.dScanTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ProStoreDetail”中列“dScanTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableProStoreDetail.dScanTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableProStoreDetail.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableProStoreDetail.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscBarCodeNull() {
                return this.IsNull(this.tableProStoreDetail.cBarCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcBarCodeNull() {
                this[this.tableProStoreDetail.cBarCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscInvCodeNull() {
                return this.IsNull(this.tableProStoreDetail.cInvCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcInvCodeNull() {
                this[this.tableProStoreDetail.cInvCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscInvNameNull() {
                return this.IsNull(this.tableProStoreDetail.cInvNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcInvNameNull() {
                this[this.tableProStoreDetail.cInvNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiQuantityNull() {
                return this.IsNull(this.tableProStoreDetail.iQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiQuantityNull() {
                this[this.tableProStoreDetail.iQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscUserNull() {
                return this.IsNull(this.tableProStoreDetail.cUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcUserNull() {
                this[this.tableProStoreDetail.cUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSPNumberNull() {
                return this.IsNull(this.tableProStoreDetail.FSPNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSPNumberNull() {
                this[this.tableProStoreDetail.FSPNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscLotNoNull() {
                return this.IsNull(this.tableProStoreDetail.cLotNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcLotNoNull() {
                this[this.tableProStoreDetail.cLotNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableProStoreDetail.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableProStoreDetail.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFItemIDNull() {
                return this.IsNull(this.tableProStoreDetail.FItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFItemIDNull() {
                this[this.tableProStoreDetail.FItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdScanTimeNull() {
                return this.IsNull(this.tableProStoreDetail.dScanTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdScanTimeNull() {
                this[this.tableProStoreDetail.dScanTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StockDetailRow : global::System.Data.DataRow {
            
            private StockDetailDataTable tableStockDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockDetail = ((StockDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableStockDetail.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“RowNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FBatchNo {
                get {
                    try {
                        return ((string)(this[this.tableStockDetail.FBatchNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“FBatchNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.FBatchNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FQty {
                get {
                    try {
                        return ((string)(this[this.tableStockDetail.FQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“FQty”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.FQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FStockName {
                get {
                    try {
                        return ((string)(this[this.tableStockDetail.FStockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“FStockName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.FStockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FStockPlaceNumber {
                get {
                    try {
                        return ((string)(this[this.tableStockDetail.FStockPlaceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“FStockPlaceNumber”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.FStockPlaceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FStockPlaceName {
                get {
                    try {
                        return ((string)(this[this.tableStockDetail.FStockPlaceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“StockDetail”中列“FStockPlaceName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStockDetail.FStockPlaceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableStockDetail.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableStockDetail.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFBatchNoNull() {
                return this.IsNull(this.tableStockDetail.FBatchNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFBatchNoNull() {
                this[this.tableStockDetail.FBatchNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFQtyNull() {
                return this.IsNull(this.tableStockDetail.FQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFQtyNull() {
                this[this.tableStockDetail.FQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFStockNameNull() {
                return this.IsNull(this.tableStockDetail.FStockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFStockNameNull() {
                this[this.tableStockDetail.FStockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFStockPlaceNumberNull() {
                return this.IsNull(this.tableStockDetail.FStockPlaceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFStockPlaceNumberNull() {
                this[this.tableStockDetail.FStockPlaceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFStockPlaceNameNull() {
                return this.IsNull(this.tableStockDetail.FStockPlaceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFStockPlaceNameNull() {
                this[this.tableStockDetail.FStockPlaceNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class ProDeliveryRowChangeEvent : global::System.EventArgs {
            
            private ProDeliveryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryRowChangeEvent(ProDeliveryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class ProDeliveryDetailRowChangeEvent : global::System.EventArgs {
            
            private ProDeliveryDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailRowChangeEvent(ProDeliveryDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProDeliveryDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class ProStoreDetailRowChangeEvent : global::System.EventArgs {
            
            private ProStoreDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailRowChangeEvent(ProStoreDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProStoreDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class StockDetailRowChangeEvent : global::System.EventArgs {
            
            private StockDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailRowChangeEvent(StockDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ProDataSetUtil {
    using System;
    using System.Data;
    
    
    public partial class DesignerUtil {
        
        public static bool IsDesignTime() {
            // Determine if this instance is running against .NET Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("B77A5C561934E089")) {
                    return true;
                }
            }
            return false;
        }
        
        public static bool IsRunTime() {
            // Determine if this instance is running against .NET Compact Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("969DB8053D3322AC")) {
                    return true;
                }
            }
            return false;
        }
    }
}
